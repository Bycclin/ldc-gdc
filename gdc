#!/usr/bin/env bash
#
# gdc â€“ a GCC-style wrapper for a D compiler
#

set -euo pipefail

DC_BIN=${DC:-ldc2}
DC_BASENAME=${DC_BIN##*/}
case "$DC_BASENAME" in
  dmd|ldmd|ldmd2) DC_KIND=dmd ;;
  *)              DC_KIND=ldc ;;
esac

if (( $# == 0 )); then
  exec "$DC_BIN"
fi

if (( $# == 1 )); then
  case "$1" in
    -version|--version|-v|-V) exec "$DC_BIN" --version ;;
    -help|--help)             exec "$DC_BIN" --help    ;;
    -dumpversion)             exec gcc -dumpversion    ;;
    -dumpmachine)             exec gcc -dumpmachine    ;;
  esac
fi

d_mode=
for a in "$@"; do
  case $a in
    *.d|*.di|*.o) d_mode=1; break ;;
  esac
done
if [[ -z $d_mode ]]; then
  exec gcc "$@"
fi

out=
compile_only=0
opt_dbg_flags=()
other_args=()

append_version_flag() {
  local name=$1
  if [[ $DC_KIND == dmd ]]; then
    other_args+=( "-version=${name}" )
  else
    other_args+=( "-d-version=${name}" )
  fi
}

while (( $# )); do
  arg=$1; shift

  if [[ $arg == -x ]]; then
    if (( $# )); then shift; fi
    continue
  fi

  if [[ $arg == -v || $arg == -V ]]; then
    continue
  fi

  case $arg in
    -o)
      if [[ $# -eq 0 ]]; then
        echo "gdc: error: missing filename after '-o'" >&2
        exit 1
      fi
      out=$1
      shift
      ;;
    -o*)
      out=${arg#-o}
      ;;

    -c)
      compile_only=1
      ;;

    -g)
      opt_dbg_flags+=( "$arg" )
      ;;
    -O|-O0|-O1|-O2|-O3)
      if [[ $DC_KIND == dmd ]]; then
        opt_dbg_flags+=( "-O" )
      else
        opt_dbg_flags+=( "$arg" )
      fi
      ;;

    -pipe|-pthread)
      ;;

    -fversion=*)
      append_version_flag "${arg#*=}"
      ;;
    -D*)
      append_version_flag "${arg#-D}"
      ;;

    -frelease)
      other_args+=( "-release" )
      ;;

    -fPIE)
      other_args+=( "-fPIC" )
      ;;

    -fno-exceptions|-fno-rtti|--fno-exceptions|--fno-rtti)
      echo "gdc: warning: unsupported flag '$arg' ignored (no direct D compiler equivalent)" >&2
      ;;

    -fno-strict-aliasing|-fasynchronous-unwind-tables)
      echo "gdc: warning: unsupported flag '$arg' ignored" >&2
      ;;

    -target)
      if [[ $# -eq 0 ]]; then
        echo "gdc: error: missing triple after '-target'" >&2
        exit 1
      fi
      other_args+=( "-mtriple" "$1" )
      shift
      ;;
    -target=*)
      other_args+=( "-mtriple=${arg#*=}" )
      ;;

    -Wall|-Wextra)
      other_args+=( "-wi" )
      ;;
    -Werror)
      other_args+=( "-w" )
      ;;
    -Wdeprecated)
      other_args+=( "-dw" )
      ;;
    -W*|-pedantic)
      ;;

    -MT)
      echo "gdc: warning: unsupported flag '-MT' ignored" >&2
      ;;
    -MMD|-MD|--MD|-MP|--MP)
      ;;
    -MF)
      if [[ $# -eq 0 ]]; then
        echo "gdc: error: missing filename after '-MF'" >&2
        exit 1
      fi
      other_args+=( "-makedeps=$1" )
      shift
      ;;

    -pie)
      other_args+=( "-L-pie" )
      ;;
    -shared-libphobos)
      if [[ $DC_KIND == ldc ]]; then
        other_args+=( "-link-defaultlib-shared=true" )
      else
        echo "gdc: warning: '-shared-libphobos' unsupported for dmd; ignoring" >&2
      fi
      ;;
    -static-libphobos)
      if [[ $DC_KIND == ldc ]]; then
        other_args+=( "-link-defaultlib-shared=false" )
      else
        echo "gdc: warning: '-static-libphobos' unsupported for dmd; ignoring" >&2
      fi
      ;;
    -static-libstdc++|-static-libgcc)
      other_args+=( "-L${arg}" )
      ;;
    -L*|-l*)
      other_args+=( "-L${arg}" )
      ;;

    -I*|-J*)
      other_args+=( "$arg" )
      ;;

    *)
      other_args+=( "$arg" )
      ;;
  esac
done

get_default_out() {
  if (( ${#other_args[@]} )); then
    for src in "${other_args[@]}"; do
      if [[ $src != -* && -f $src ]]; then
        bn=${src##*/}
        if (( compile_only )); then
          printf '%s.o\n' "${bn%.*}"
        else
          printf '%s\n'   "${bn%.*}"
        fi
        return
      fi
    done
  fi
  if (( compile_only )); then
    printf 'a.o\n'
  else
    printf 'a.out\n'
  fi
}

if (( compile_only )); then
  cmd=( "$DC_BIN" -c )
  if (( ${#opt_dbg_flags[@]} )); then cmd+=( "${opt_dbg_flags[@]}" ); fi
  if (( ${#other_args[@]} )); then cmd+=( "${other_args[@]}" ); fi
  if [[ -n $out ]]; then
    cmd+=( "-of=${out}" )
  else
    cmd+=( "-of=$(get_default_out)" )
  fi
else
  cmd=( "$DC_BIN" )
  if (( ${#opt_dbg_flags[@]} )); then cmd+=( "${opt_dbg_flags[@]}" ); fi
  if (( ${#other_args[@]} )); then cmd+=( "${other_args[@]}" ); fi
  if [[ -n $out ]]; then
    cmd+=( "-of=${out}" )
  fi
fi

[[ -n ${GDC_DEBUG:-} ]] && echo "gdc-debug ($DC_KIND): ${cmd[*]}" >&2

exec "${cmd[@]}"
